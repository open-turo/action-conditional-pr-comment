name: Conditional PR comment
description:
  GitHub Action that supports instructing the author of a Pull Request (PR) how
  to resolve a given problem within the context of a PR. Conditionally adds a
  comment to the PR with resolution instructions, and once the condition is
  found to be resolved, allows the previously added comment, if one exists at
  that time, to be removed from the PR.
inputs:
  workflow:
    required: true
    description:
      ADD indicates the comment is to be added/updated to/within the PR, REMOVE
      indicates the comment is to be removed from the PR.
  text-detector:
    required: true
    description:
      This is some unique verbatim subset of the comment that is to be used to
      determine if a comment has already been created against the PR that
      instructs the author how to resolve the given problem.
    default: created by action-conditional-pr-comment
  github-token:
    required: true
    description:
      GitHub token that can add/update/delete comments. e.g.
      'secrets.GITHUB_TOKEN'
  comment:
    required: false
    description:
      This is the full text of the message to be placed within a comment of the
      given PR to instruct the author of the PR how to resolve a given problem.
      This value should be provided for all ADD workflows.
    default: fixme
  comment-author:
    required: false
    description: The author of the comment upon addition.
    default: open-turo-bot
  edit-mode:
    required: false
    description: The mode when updating a comment, "replace" or "append".
    default: append
runs:
  using: composite
  steps:
    - name: Verify we are in the context of a PR
      if: github.event_name != 'pull_request'
      id: pr
      shell: bash
      ## This action can only be run in the context of a PR
      run: |
        echo "::warning title=Unsupported run state::open-turo/action-conditional-pr-comment can only be run within the context of a PR"
        echo "no-pr=true" >> "$GITHUB_OUTPUT"
        exit
    - name: Check to see if comment already present on the PR
      id: fc
      if: steps.pr.outputs.no-pr != 'true'
      uses: peter-evans/find-comment@v3
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: ${{ inputs.comment-author }}
        body-includes: ${{ inputs.text-detector }}
        token: ${{ inputs.github-token }}
    - name: Conditionally add comment to PR
      if:
        inputs.workflow == 'ADD' && steps.fc.outputs.comment-id == '' &&
        steps.pr.outputs.no-pr != 'true'
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.pull_request.number }}
        ## Place the comment detection text within an HTML comment.
        body:
          ${{ format('{0} <!-- {1} -->', inputs.comment, inputs.text-detector)}}
        token: ${{ inputs.github-token }}
    - name: Conditionally update existing comment within PR
      if:
        inputs.workflow == 'ADD' && steps.fc.outputs.comment-id != '' &&
        steps.pr.outputs.no-pr != 'true'
      uses: peter-evans/create-or-update-comment@v4
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        edit-mode: ${{ inputs.edit-mode }}
        ## Place the comment detection text within an HTML comment.
        body:
          ${{ format('{0} <!-- {1} -->', inputs.comment, inputs.text-detector)}}
        token: ${{ inputs.github-token }}
    - name: Conditionally delete comment from PR if found
      if:
        inputs.workflow == 'REMOVE' && steps.fc.outputs.comment-id != '' &&
        steps.pr.outputs.no-pr != 'true'
      uses: winterjung/comment@v1
      with:
        type: delete
        comment_id: ${{ steps.fc.outputs.comment-id }}
        token: ${{ inputs.github-token }}
